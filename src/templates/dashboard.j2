<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
session_start();

if (!isset($_SESSION['user']) || empty($_SESSION['user'])) {
    header('Location: /');
    exit;
}
?>
{% extends 'templates/base.j2' %}
{% block title %}CronDNS{% endblock %}

{% block content %}
<div class="dashboard-layout">

  <div class="sidebar">
    <h2>CronDNS</h2>
    <a href="/home.php" class="{{ 'active' if active_page == 'home' }}">
      <i class="ti ti-home"></i><span>Home</span>
    </a>
    <a href="/domains.php" class="{{ 'active' if active_page == 'domains' }}">
      <i class="ti ti-world"></i><span>Domains</span>
    </a>
    <a href="/settings.php" class="{{ 'active' if active_page == 'settings' }}">
      <i class="ti ti-settings"></i><span>Settings</span>
    </a>
    <div class="sidebar-spacer"></div>

    <div class="sidebar-footer">
      <a href="/api/logout.php" class="sidebar-logout">
        <i class="ti ti-logout"></i> Logout
      </a>
      <div class="sidebar-version">v{{ cfg.version }}</div>
    </div>
  </div>
  <div class="content">
    {% block main %}{% endblock %}
  </div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const repo = 'TRC-Loop/CronDNS';
  const currentVersion = '{{ cfg.version }}';
  const checkButton = document.getElementById('checkUpdatesBtn');

  async function checkForUpdates(manual = false) {
    const api = `https://api.github.com/repos/${repo}/releases/latest`;
    try {
      const res = await fetch(api, { headers: { 'User-Agent': 'CronDNS-VersionCheck' } });
      if (!res.ok) throw new Error('GitHub API error');
      const data = await res.json();

      const latest = data.tag_name?.replace(/^v/i, '') ?? null;
      if (!latest) return;

      const current = currentVersion.replace(/^v/i, '');
      if (isOutdated(current, latest)) {
        showUpdateNotice(latest);
        if (manual) showToast(`New version available: v${latest}`);
      } else if (manual) {
        showToast(`You are up to date! (v${currentVersion})`);
      }
    } catch (err) {
      if (manual) showToast('Failed to check for updates.');
      console.warn('Version check failed:', err);
    }
  }

  function isOutdated(current, latest) {
    const normalize = v => v.split(/[^0-9a-z]+/i).map(x => x.padStart(4, '0')).join('');
    return normalize(current) < normalize(latest);
  }

  function showUpdateNotice(latest) {
    const dismissed = sessionStorage.getItem('dismissedVersion');
    if (dismissed === latest) return;

    const notice = document.createElement('div');
    notice.className = 'app-notice';
    notice.dataset.latest = latest;
    notice.innerHTML = `
      <div class="notice-text">
        <i class="ti ti-alert-triangle"></i>
        <strong>Update available:</strong>
        You are using version <code>${currentVersion}</code>.
        Latest is <code>${latest}</code>.
      </div>
      <div class="notice-actions">
        <a href="https://github.com/${repo}/releases/latest" target="_blank">Update Now</a>
        <button class="btn-secondary dismiss-notice">Dismiss</button>
      </div>
    `;

    const content = document.querySelector('.content');
    content?.prepend(notice);

    notice.querySelector('.dismiss-notice').addEventListener('click', () => {
      notice.remove();
      sessionStorage.setItem('dismissedVersion', latest);
    });
  }

  function showToast(text) {
    const t = document.createElement('div');
    t.className = 'toast-message';
    t.textContent = text;
    document.body.appendChild(t);
    setTimeout(() => t.classList.add('visible'), 10);
    setTimeout(() => t.classList.remove('visible'), 2500);
    setTimeout(() => t.remove(), 3000);
  }

  // Auto check on load
  checkForUpdates();

  // Manual recheck
  if (checkButton) {
    checkButton.addEventListener('click', () => {
      sessionStorage.removeItem('dismissedVersion'); // clear before recheck
      checkForUpdates(true);
    });
  }
});

</script>

</div>
{% endblock %}
